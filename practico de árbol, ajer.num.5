from typing import Any, Optional
from ejercicio24pila import personajes_mas_de_5
from queue_ import queue
queue_.py



class BinaryTree:

    class __nodeTree:

        def __init__(self, value: Any, other_values: Optional[Any] = None):
            self.value = value
            self.other_values = other_values
            self.left = None
            self.right = None

    def __init__(self):
        self.root = None

    def insert(self, value: Any, other_values: Optional[Any] = None):
        def __insert(root, value, other_values):
            if root is None:
                return BinaryTree.__nodeTree(value, other_values)
            elif value < root.value:
                root.left = __insert(root.left, value, other_values)
            else:
                root.right = __insert(root.right, value, other_values)

            return root

        self.root = __insert(self.root, value, other_values)

    def pre_order(self):
        def __pre_order(root):
            if root is not None:
                print(root.value, root.other_values)
                __pre_order(root.left)
                __pre_order(root.right)

        if self.root is not None:
            __pre_order(self.root)

    def in_order(self):
        def __in_order(root):
            if root is not None:
                __in_order(root.left)
                print(root.value)
                __in_order(root.right)

        if self.root is not None:
            __in_order(self.root)

    def post_order(self):
        def __post_order(root):
            if root is not None:
                __post_order(root.right)
                print(root.value)
                __post_order(root.left)

        if self.root is not None:
            __post_order(self.root)

    def by_level(self):
        pass

    def search(self, value: Any) -> __nodeTree:
        def __search(root, value):
            if root is not None:
                if root.value == value:
                    return root
                elif root.value > value:
                    return __search(root.left, value)
                else:
                    return __search(root.right, value)

        aux = None
        if self.root is not None:
            aux = __search(self.root, value)
        return aux

    def delete(self, value: Any):
        def __replace(root):
            if root.right is None:
                print(f'valor para remplazar {root.value}')
                return root.left, root
            else:
                root.right, replace_node = __replace(root.right)
                return root, replace_node

        def __delete(root, value):
            delete_value = None
            if root is not None:
                if value < root.value:
                    root.left, delete_value = __delete(root.left, value)
                elif value > root.value:
                    root.right, delete_value = __delete(root.right, value)
                else:
                    delete_value = root.value
                    if root.left is None:
                        root = root.right
                    elif root.right is None:
                        root.right = root.left
                    else:
                        root.left, replace_node = __replace(root.left)
                        root.value = replace_node.value
                        root.other_values = replace_node.other_values

            return root, delete_value

        delete_value =  None
        if self.root is not None:
            self.root, delete_value = __delete(self.root, value)
            print(self.root.value, delete_value)
        
        return delete_value
    
    def by_level(self):
        tree_queue = Queue()
        if self.root is not None:
            tree_queue.arrive(self.root)

            while tree_queue.size() > 0:
                node = tree_queue.attention()
                print(node.value)
                if node.left is not None:
                    tree_queue.arrive(node.left)
                if node.right is not None:
                    tree_queue.arrive(node.right)

    def villain_in_order(self):
        def __villain_in_order(root):
            if root is not None:
                __villain_in_order(root.left)
                if root.other_values["is_villain"] is True:
                    print(root.value)
                __villain_in_order(root.right)

        if self.root is not None:
            __villain_in_order(self.root)


# arbol = BinaryTree()

# arbol.insert('F', 'f')
# arbol.insert('B', 'b')
# arbol.insert('K', 'k')
# arbol.insert('E', 'e')
# arbol.insert('H', 'h')
# arbol.insert('J', 'j')
# arbol.insert('R', 'r')
# arbol.insert('I', 'i')
# arbol.insert('A', 'a')
# # delete_value = arbol.delete('F')

# # if delete_value is not None:
# #     print(f'valor eliminado {delete_value}')
# # else:
# #     print('valor no encontrado')
# # print()
# arbol.by_level()


# # arbol.insert(11)

# # pos = arbol.search(19)
# # print(pos)
# arbol.in_order()

# from super_heroes_data import superheroes

# for super_hero in superheroes:
#     arbol.insert(super_hero['name'], super_hero)

# arbol.villain_in_order()

# print()
# pos = arbol.search("Thanos")
# if pos is not None:
#     print(pos.value, pos.other_values)

superheroes = [
    {
        "name": "Kang",
        "alias": "Kang the Conqueror",
        "real_name": "Nathaniel Richards",
        "short_bio": "Kang the Conqueror is a time-traveling warlord who has battled many heroes, especially the Avengers. He is known for his mastery of advanced technology and his ability to manipulate time.",
        "first_appearance": 1964,
        "is_villain": True
    },
    {
        "name": "Hulk",
        "alias": "The Hulk",
        "real_name": "Bruce Banner",
        "short_bio": "Hulk is a gamma-powered superhero with incredible strength and durability. He transforms into a green giant when angered or stressed.",
        "first_appearance": 1962,
        "is_villain": False
    },
    {
        "name": "Black Widow",
        "alias": "Natasha Romanoff",
        "real_name": "Natasha Romanoff",
        "short_bio": "Black Widow is a highly trained spy and former assassin with exceptional skills in hand-to-hand combat and espionage.",
        "first_appearance": 1964,
        "is_villain": False
    },
    {
        "name": "Black Cat",
        "alias": "Felicia Hardy",
        "real_name": "Felicia Hardy",
        "short_bio": "Black Cat is a skilled burglar with a unique power that brings bad luck to her enemies. She often operates in the gray area between hero and villain.",
        "first_appearance": 1979,
        "is_villain": True
    },
    {
        "name": "Iron Man",
        "alias": "Iron Man",
        "real_name": "Tony Stark",
        "short_bio": "A billionaire inventor who built a powered suit of armor to save his life and became a founding Avenger.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
        "name": "Magneto",
        "alias": "Master of Magnetism",
        "real_name": "Max Eisenhardt",
        "short_bio": "A powerful mutant with control over magnetic fields, often portrayed as an adversary to the X-Men, though with complex motivations.",
        "first_appearance": 1963,
        "is_villain": True
    },
    {
        "name": "Storm",
        "alias": "Storm",
        "real_name": "Ororo Munroe",
        "short_bio": "A mutant with the ability to manipulate weather, known for her leadership in the X-Men and her strong moral compass.",
        "first_appearance": 1975,
        "is_villain": False
    },
    {
        "name": "Venom",
        "alias": "Venom",
        "real_name": "Eddie Brock",
        "short_bio": "A journalist who bonds with an alien symbiote to become the anti-hero Venom, often torn between vengeance and justice.",
        "first_appearance": 1988,
        "is_villain": True
    },
    {
        "name": "Scarlet Witch",
        "alias": "Scarlet Witch",
        "real_name": "Wanda Maximoff",
        "short_bio": "A mutant with chaos magic and reality-warping powers, known for her complex role as both hero and threat.",
        "first_appearance": 1964,
        "is_villain": False
    },
    {
        "name": "Abomination",
        "alias": "Abomination",
        "real_name": "Emil Blonsky",
        "short_bio": "A former KGB agent who transforms into a gamma-powered monster and becomes one of Hulk's main enemies.",
        "first_appearance": 1967,
        "is_villain": True
    },
    {
        "name": "Adam Warlock",
        "alias": "Adam Warlock",
        "real_name": "Adam Warlock",
        "short_bio": "An artificially created perfect human who becomes a cosmic protector and wielder of the Soul Gem.",
        "first_appearance": 1967,
        "is_villain": False
    },
    {
        "name": "Angel",
        "alias": "Angel",
        "real_name": "Warren Worthington III",
        "short_bio": "A founding member of the X-Men with large feathered wings that allow him to fly.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
        "name": "Annihilus",
        "alias": "Annihilus",
        "real_name": "Annihilus",
        "short_bio": "A powerful insectoid ruler from the Negative Zone, obsessed with extending his lifespan.",
        "first_appearance": 1968,
        "is_villain": True
    },
    {
        "name": "Ant Man",
        "alias": "Ant Man",
        "real_name": "Hank Pym",
        "short_bio": "A brilliant scientist who discovered Pym Particles and became a size-changing superhero.",
        "first_appearance": 1962,
        "is_villain": False
    },
    {
    "name": "Apocalypse",
    "alias": "Apocalypse",
    "real_name": "En Sabah Nur",
    "short_bio": "One of the first mutants, Apocalypse believes in survival of the fittest and has enhanced his body over millennia with alien technology.",
    "first_appearance": 1986,
    "is_villain": True
    },
    {
        "name": "Baron Zemo",
        "alias": "Baron Zemo",
        "real_name": "Helmut Zemo",
        "short_bio": "A brilliant and ruthless strategist, Baron Zemo is a longtime foe of Captain America and leader of various villainous groups.",
        "first_appearance": 1973,
        "is_villain": True
    },
    {
        "name": "Beast",
        "alias": "Beast",
        "real_name": "Henry 'Hank' McCoy",
        "short_bio": "A founding member of the X-Men, Beast possesses superhuman strength and agility along with a brilliant scientific mind.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
        "name": "Beta Ray Bill",
        "alias": "Beta Ray Bill",
        "real_name": "Beta Ray Bill",
        "short_bio": "A noble alien warrior deemed worthy of wielding Mjolnir, he was granted his own hammer, Stormbreaker, by Odin.",
        "first_appearance": 1983,
        "is_villain": False
    },
    {
        "name": "Black Bolt",
        "alias": "Black Bolt",
        "real_name": "Blackagar Boltagon",
        "short_bio": "King of the Inhumans, Black Bolt possesses a voice so powerful that even a whisper can cause massive destruction.",
        "first_appearance": 1965,
        "is_villain": False
    },
    {
        "name": "Black Panther",
        "alias": "Black Panther",
        "real_name": "T'Challa",
        "short_bio": "King of Wakanda and protector of its people, Black Panther is a skilled fighter, strategist, and bearer of the Heart-Shaped Herb.",
        "first_appearance": 1966,
        "is_villain": False
    },
    {
        "name": "Blizzard",
        "alias": "Blizzard",
        "real_name": "Donnie Gill",
        "short_bio": "A villain who uses a suit capable of generating intense cold and ice-based attacks, often clashing with Iron Man.",
        "first_appearance": 1987,
        "is_villain": True
    },
    {
        "name": "Bullseye",
        "alias": "Bullseye",
        "real_name": "Lester",
        "short_bio": "An assassin with deadly accuracy, Bullseye never misses and is a persistent nemesis of Daredevil.",
        "first_appearance": 1976,
        "is_villain": True
    },
    {
        "name": "Cable",
        "alias": "Cable",
        "real_name": "Nathan Summers",
        "short_bio": "A time-traveling mutant soldier with telekinetic powers and a techno-organic virus, he is the son of Cyclops and Madelyne Pryor.",
        "first_appearance": 1990,
        "is_villain": False
    },
    {
    "name": "Captain America",
    "alias": "Captain America",
    "real_name": "Steve Rogers",
    "short_bio": "A super-soldier from World War II, Captain America is a symbol of heroism, justice, and patriotism in the Marvel Universe.",
    "first_appearance": 1941,
    "is_villain": False
    },
    {
        "name": "Captain Britain",
        "alias": "Captain Britain",
        "real_name": "Brian Braddock",
        "short_bio": "Chosen by Merlyn and Roma to protect the multiverse, Captain Britain draws his powers from a mystical amulet and his own will.",
        "first_appearance": 1976,
        "is_villain": False
    },
    {
        "name": "Charlie-27",
        "alias": "Charlie-27",
        "real_name": "Charlie-27",
        "short_bio": "A genetically engineered soldier from Jupiter and member of the original Guardians of the Galaxy team from the 31st century.",
        "first_appearance": 1969,
        "is_villain": False
    },
    {
        "name": "Cloak",
        "alias": "Cloak",
        "real_name": "Tyrone Johnson",
        "short_bio": "Cloak can manipulate darkforce energy and teleport through the Dark Dimension. He is one half of the duo Cloak and Dagger.",
        "first_appearance": 1982,
        "is_villain": False
    },
    {
        "name": "Colossus",
        "alias": "Colossus",
        "real_name": "Piotr Rasputin",
        "short_bio": "A Russian mutant who can transform his body into organic steel, Colossus is a powerful member of the X-Men.",
        "first_appearance": 1975,
        "is_villain": False
    },
    {
        "name": "Cyclops",
        "alias": "Cyclops",
        "real_name": "Scott Summers",
        "short_bio": "A founding member and leader of the X-Men, Cyclops emits powerful optic blasts and is known for his strategic mind.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
        "name": "Cyclops-X-Men97",
        "alias": "Cyclops-X-Men97",
        "real_name": "Scott Summers",
        "short_bio": "An alternate version of Cyclops as seen in the animated series X-Men '97, continuing to lead the X-Men after Xavier’s absence.",
        "first_appearance": 2023,
        "is_villain": False
    },
    {
        "name": "Dagger",
        "alias": "Dagger",
        "real_name": "Tandy Bowen",
        "short_bio": "Dagger generates light daggers that heal and purify. She forms a powerful partnership with Cloak.",
        "first_appearance": 1982,
        "is_villain": False
    },
    {
        "name": "Daredevil",
        "alias": "Daredevil",
        "real_name": "Matt Murdock",
        "short_bio": "Blinded as a child, Daredevil's remaining senses were heightened to superhuman levels. He defends Hell’s Kitchen as a masked vigilante.",
        "first_appearance": 1964,
        "is_villain": False
    },
    {
        "name": "Deadpool",
        "alias": "Deadpool",
        "real_name": "Wade Wilson",
        "short_bio": "A mercenary with a healing factor, Deadpool is known for his irreverent humor, unpredictability, and breaking the fourth wall.",
        "first_appearance": 1991,
        "is_villain": False
    },
    {
        "name": "Drax the Destroyer",
        "alias": "Drax the Destroyer",
        "real_name": "Arthur Douglas",
        "short_bio": "Originally a human, Drax was resurrected to destroy Thanos. He possesses superhuman strength and resilience.",
        "first_appearance": 1973,
        "is_villain": False
    },
    {
        "name": "Dr Doom",
        "alias": "Dr Doom",
        "real_name": "Victor Von Doom",
        "short_bio": "A brilliant scientist and ruler of Latveria, Doctor Doom seeks to conquer the world and frequently clashes with the Fantastic Four.",
        "first_appearance": 1962,
        "is_villain": True
    },
    {
        "name": "Dr Octopus",
        "alias": "Dr Octopus",
        "real_name": "Otto Octavius",
        "short_bio": "A genius scientist whose mechanical arms fused to his body, Doctor Octopus is a major foe of Spider-Man.",
        "first_appearance": 1963,
        "is_villain": True
    },
    {
        "name": "Dr Strannnnnge",
        "alias": "Dr Strange",
        "real_name": "Stephen Strange",
        "short_bio": "Once a brilprintliant but arrogant surgeon, he became the Sorcerer Supreme and protector of Earth from magical threats.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
    "name": "Electro",
    "alias": "Electro",
    "real_name": "Maxwell Dillon",
    "short_bio": "A former lineman who gained the ability to control electricity after being struck by lightning, becoming one of Spider-Man's most enduring enemies.",
    "first_appearance": 1964,
    "is_villain": True
    },
    {
        "name": "Elektra",
        "alias": "Elektra",
        "real_name": "Elektra Natchios",
        "short_bio": "A skilled assassin and former love interest of Daredevil, known for her complex morality and deadly prowess.",
        "first_appearance": 1981,
        "is_villain": False
    },
    {
        "name": "Falcon",
        "alias": "Falcon",
        "real_name": "Samuel Thomas Wilson",
        "short_bio": "A superhero who uses mechanical wings to fly and has limited telepathic control over birds; later assumes the mantle of Captain America.",
        "first_appearance": 1969,
        "is_villain": False
    },
    {
        "name": "Galactus",
        "alias": "Galactus",
        "real_name": "Galan",
        "short_bio": "A cosmic entity who consumes planets to sustain his life force, serving a functional role in the Marvel Universe.",
        "first_appearance": 1966,
        "is_villain": True
    },
    {
        "name": "Gamora",
        "alias": "Gamora",
        "real_name": "Gamora Zen Whoberi Ben Titan",
        "short_bio": "The adopted daughter of Thanos and the last of her species, known for her superhuman strength and agility.",
        "first_appearance": 1975,
        "is_villain": False
    },
    {
        "name": "Ghost Rider",
        "alias": "Ghost Rider",
        "real_name": "Johnny Blaze",
        "short_bio": "A stunt motorcyclist who becomes the Ghost Rider after making a deal with Mephisto, gaining a flaming skull and supernatural powers.",
        "first_appearance": 1972,
        "is_villain": False
    },
    {
        "name": "Giraud",
        "alias": "Giraud",
        "real_name": "Giraud",
        "short_bio": "A native of the planet Haven who becomes the host for the Phoenix Force in the 31st century.",
        "first_appearance": 1994,
        "is_villain": False
    },
    {
        "name": "Gladiator",
        "alias": "Gladiator",
        "real_name": "Kallark",
        "short_bio": "A Strontian and leader of the Shi'ar Imperial Guard, possessing immense strength and various superpowers.",
        "first_appearance": 1977,
        "is_villain": False
    },
    {
        "name": "Green Goblin",
        "alias": "Green Goblin",
        "real_name": "Norman Osborn",
        "short_bio": "A wealthy industrialist who becomes one of Spider-Man's greatest foes after taking a serum that grants him superhuman abilities.",
        "first_appearance": 1964,
        "is_villain": True
    },
    {
        "name": "Groot",
        "alias": "Groot",
        "real_name": "Groot",
        "short_bio": "A Flora colossus from Planet X, known for his regenerative abilities and limited vocabulary.",
        "first_appearance": 1960,
        "is_villain": False
    },
    {
        "name": "Guardian",
        "alias": "Guardian",
        "real_name": "James MacDonald Hudson",
        "short_bio": "A Canadian superhero and leader of Alpha Flight, wearing a suit that grants him various abilities.",
        "first_appearance": 1978,
        "is_villain": False
    },
    {
        "name": "Havok",
        "alias": "Havok",
        "real_name": "Alexander Summers",
        "short_bio": "The younger brother of Cyclops, capable of absorbing and emitting powerful plasma blasts.",
        "first_appearance": 1969,
        "is_villain": False
    },
    {
        "name": "Hawkeye",
        "alias": "Hawkeye",
        "real_name": "Clinton Francis Barton",
        "short_bio": "A master archer and former S.H.I.E.L.D. agent who becomes a key member of the Avengers.",
        "first_appearance": 1964,
        "is_villain": False
    },
    {
        "name": "Human Torch",
        "alias": "Human Torch",
        "real_name": "Jonathan Lowell Spencer Storm",
        "short_bio": "A member of the Fantastic Four who can engulf his body in flames and fly.",
        "first_appearance": 1961,
        "is_villain": False
    },
    {
        "name": "Iceman",
        "alias": "Iceman",
        "real_name": "Robert Louis Drake",
        "short_bio": "A founding member of the X-Men with the ability to generate and manipulate ice.",
        "first_appearance": 1963,
        "is_villain": False
    },
    {
        "name": "Invisible Woman",
        "alias": "Invisible Woman",
        "real_name": "Susan Storm Richards",
        "short_bio": "A member of the Fantastic Four who can render herself invisible and create force fields.",
        "first_appearance": 1961,
        "is_villain": False
    },
    {
        "name": "Iron Fist",
        "alias": "Iron Fist",
        "real_name": "Daniel Thomas Rand-K'ai",
        "short_bio": "A martial artist who gained the power of the Iron Fist by defeating the dragon Shou-Lao.",
        "first_appearance": 1974,
        "is_villain": False
    },


# ejercisio numero 5 de arbol


# Importar TDA y cola
from binary_tree import BinaryTree 
from queue_ import queue
from super_heroes_data import superheroes
#punto 1- Almacenar nombre mas campo booleano 

value = 'nombre'
other_values = {
    'is_villain': True/False,
    'height': ...,
    'weight': ...,
    'derrotado_por': ...
}

#insertar personajes,aqui personajes es un diccionario q contiene "is_villan"
#y otros campos

    BinaryTree.insertar (personajes["name"]personajes)

#punto 2- listar los villanos ordenados alfabeticamente,aca usamos la funcion
#" villan_in_order" que ya hace un barrido "in_order"filtrado de solo villanos. 

   
   print ("villanos ordenados alfabeticamente:")
    arbol.villan_in_order () 
     print()
     
     
#punto 3- Mostrar todos los superheroes que comiensen con "C"

  print(" Superhéroes que comienzan con 'C':")
def heroes_con_c(root):
    if root is not None:
        heroes_con_c(root.left)
        if root.value.startswith('C') and root.other_values['is_villain'] == False:
            print(root.value)
        heroes_con_c(root.right)

heroes_con_c(arbol.root)
print()

#punto4- Determinar cuantos superheroes hay en el arbol
#ya esta resuelto en el TDA con count_heroes():


cantidad_heroes = arbol.count_heroes()
print(f" Cantidad de superhéroes en el árbol: {cantidad_heroes}")
print()

#punto5- Corregir Doctor Strange con busqueda de proximidad 

print(" Búsqueda por proximidad 'Dr Strange':")
arbol.proximity_search('Dr Strange')

nombre = input("\nIngrese el nombre a modificar: ")
valor, otros_valores = arbol.delete(nombre)
if valor is not None:
    nuevo_nombre = input("Ingrese el nombre correcto: ")
    otros_valores['name'] = nuevo_nombre
    arbol.insert(nuevo_nombre, otros_valores)
    print(f"\n✅ Se modificó correctamente: {nombre} → {nuevo_nombre}")
print() 

#punto6- Listar superheroes de manera descendente 
#agregamos esta funcion al TDA:

def in_order_desc(self):
    def __in_order_desc(root):
        if root is not None:
            __in_order_desc(root.right)
            if root.other_values['is_villain'] == False:
                print(root.value)
            __in_order_desc(root.left)
    __in_order_desc(self.root)

  print(" Superhéroes descendente (Z → A):")
arbol.in_order_desc()
print()


#punto7-Generar bosques y tareas 
#7a-Dividir el arbol en heroes y villanos 

  arbol_heroes = BinaryTree()
arbol_villanos = BinaryTree()
arbol.divide_tree(arbol_heroes, arbol_villanos)

#7b-Determinar cuantos nodos tiene cada arbol

  def contar_nodos(arbol):
    def __contar(root):
        if root is None:
            return 0
        return 1 + __contar(root.left) + __contar(root.right)
    return __contar(arbol.root)

print(f" Árbol de héroes: {contar_nodos(arbol_heroes)} nodos")
print(f" Árbol de villanos: {contar_nodos(arbol_villanos)} nodos")
print()

#7c-hasemos un barrido ordenado alfabeticamente de cada arbol 
   
   print(" Árbol de héroes ordenado:")
arbol_heroes.in_order()
print()
print(" Árbol de villanos ordenado:")
arbol_villanos.in_order()
print()
